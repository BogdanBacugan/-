# Тема 3. операторы условия и циклы
Отчет по Теме #3 выполнил(а):
- Дробышева Екатерина Евгениевна
- ИВТ-22-1

| Задание | Лаб_раб | Сам_раб |
| ------ | ------ | ------ |
| Задание 1 | + | + |
| Задание 2 | + | + |
| Задание 3 | + | + |
| Задание 4 | + | + |
| Задание 5 | + | + |
| Задание 6 | + |  |
| Задание 7 | + |  |
| Задание 8 | + |  |
| Задание 9 | + |  |
| Задание 10 | + |  |


знак "+" - задание выполнено; знак "-" - задание не выполнено;

Работу проверили:
- к.э.н., доцент Панов М.А.

## Лабораторная работа №1
### Создайте две переменные, значение которых будете вводить через консоль. Также составьте условие, в котором созданные ранее переменные будут сравниваться, если условие выполняется, то выведете в консоль «Выполняется», если нет, то «Не выполняется».

```python
print(123)
print('123')
print(1.23)
```
### Результат.


##Выводы
В данном коде выводятся реализуется вывод чичел с помощью функции `print()`.

## Лабораторная работа №2
### Выведите в консоль три строки. Первая - результат сложения или вычитания минимум двух переменных типа int. Вторая - результат сложения или вычитания минимум двух переменных типа float. Третья - результат сложения или вычитания минимум двух переменных типа int и float.

```python
print(123-12)
print(4.2+4.2)
print(3+1.3)
```
### Результат.
![image](https://github.com/user-attachments/assets/d37e4a0e-0a7d-47f6-a1cd-e2c2414483ec)

### Выводы. в данном коде показан пример сложения чисел разного формата int и float.

## Лабораторная работа №3
### Выведите в консоль три строки. Первая - обычная строка. Вторая - F строка с использованием заранее объявленной переменной. Третья - сложите две или более строк в одну.

```python
print('привет мир!')

world = 'мир'
print(f"Привет, {world}!")

one = 'привет '
two = 'мир!'
print(one+two)
```
### Результат. 
![image](https://github.com/user-attachments/assets/a5b1857b-a3a4-4645-b916-ecd2d3deedf7)

### Выводы.
В данном коде показаны способы вывода данных. Первый - обычная строка. Второй - F строка с использованием заранее объявленной переменной. Третий - сложите две или более строк в одну.

## Лабораторная работа №4
### Выведите в консоль три строки. Первая - трансформация любого типа переменной в bool. Вторая - трансформация любого типа переменной в float или int. Третья - трансформация любого типа переменной в str.

```python
one = 'Hello'
print(bool(one))

two = 123
print(float(two))

three = None
print(str(three))
```

### Результат.
![image](https://github.com/user-attachments/assets/81577a5f-337f-4d5c-a246-9df263ff3f95)

###Выводы.
В данном коде представлена трансформация переменных из одного типа в другой.

## Лабораторная работа №5
### Присвойте трем переменным различные значения, воспользовавшись функцией input()

```python
one = input('one:')
two = input('two:')
three = input('three:')
print(one, two, three)
```
### Результат.
![image](https://github.com/user-attachments/assets/713e0730-819f-4a74-9d1c-e57eb2ff8268)

### Выводы.
В данном коде представлены три переменные.ю которые нужно самостоятельно заполнить с консоли.

## Лабораторная работа №6
### Создайте две любые числовые переменные и выполните над ними несколько математических операций: возведение в степень, обычное деление, целочисленное деление, нахождение остатка от деления. При желании вы можете проверить как работают эти вычисления с разными типами данных, например, сначала создать две переменные int, затем создать две переменные float и наконец создать переменные типа int и float и провести над ними операции, прописанные выше.

```python
a = 12
b = 5
print('Возведение в степень:', a ** b)
print ('Обычное деление:', a / b)
print ('Целочисленное деление:', a // b)
print('Нахождение остатка от деления:', a % b)
```

### Результат.
![image](https://github.com/user-attachments/assets/853d908e-ff97-4b60-9f04-f4bae122008e)

### Выводы.
В даннном коде препдставленны математические операции такие как возведение в степень, обычное деление, целочисленное деление и нахождения остатка от деления.

## Лабораторная работа №7
### Создайте любую строковую переменную и произведите над ней математическое действие умножение на любое число.

```python
line = 'Lol'
print(line * 3)
```
### Результат.
![image](https://github.com/user-attachments/assets/318edc23-976d-4d3b-b86f-09af6d8983fd)

### Вываоды.
в данном коде показано что можно одну и ту же строку выводить несколько раз умножая ее на целое число.

## Лабораторная работа №8
### Посчитайте сколько раз символ 'о' встречается в строке 'Hello World'.

```python
sentence = 'Hello World'
print(sentence.count('o'))
```
### Результат.
![image](https://github.com/user-attachments/assets/53995f9c-799f-4881-be09-8f7997a98990)

### Выводы.
в этом коде показано как можно посчитать количество определенного символа в строке.

## Лабораторная работа №9
### Напишите предложение 'Hello World' в две строки. Написанная программа должна занимать одну строку в редакторе кода.
```python
print('Hello\nWorld')
```
### Результат.
![image](https://github.com/user-attachments/assets/932a0d22-fa71-42ba-947a-7a6234016931)

### Выводы.
в данном коде аоказано как можно сокращать запись кода с помощью  \n.

## Лабораторная работа №10
### Из предложения 'Hello World' выведите в консоль только 2 символ, а затем выведите слово 'Hello'
```python
sentence = 'Hello World'
print(sentence[1])
print(sentence[:5])
```
### Результат.
![image](https://github.com/user-attachments/assets/26b7634c-6e31-472c-8057-fb8527cab843)

### Выводы.
В данном коде показано как можно из строки отдельно выводить на консоль либо один силвол либо определенное количество символов. 

## Самостоятельная работа №1
### Выведите в консоль булевую переменную False, не используя слово False в строке или изначально присвоенную булевую переменную. Программа должна занимать не более двух строк редактора кода.
```python
print(not True)
```
### Результат.
![image](https://github.com/user-attachments/assets/70d740f8-6c57-404e-829e-43e3d4fab22d)

### Выводы.
В ходе выполнения данной самостоятельной работы было изучено одно из применений True, а именно что при добавление к нему not значение становится False, что в некоторых ситуациях может помочь с сокращением кодов.

## Самостоятельная работа №2
### Присвоить значения трем переменным и вывести их в консоль, используя только две строки редактора кода

```python
a, b, c = 1, 2, 3;
print(a, b, c)
```
### Результат
![image](https://github.com/user-attachments/assets/93999f4d-3da4-4baa-b6ec-774da8adaaa7)

### Выводы. 
В ходе выполнения данной самостоятельной работы было изучено, что можно выводить значения переменных, а так же присваивать их сразу же в одной строке если записывать их последовательно.

## Самостоятельная работа №3
### Реализуйте ввод данных в программу, через консоль, в виде только целых чисел (тип данных int). То есть при вводе буквенных символов в консоль, программа не должна работать. Программа должна занимать не более двух строк редактора кода.

```python
try: print(int(input()))
except ValueError: pass
```

### Результат.
![image](https://github.com/user-attachments/assets/59998fa5-dc48-4ba8-8234-38da05d94f7e)

### Выводы.
В данной самостоятельной работе показана работа except ValueError: pass которая проверяет формат символов которые вводятся с консоли и при не соблюдении условий заданных программой выдает ошибку.

## Самостоятельная работа №4
### Создайте только одну строковую переменную. Длина строки должна не превышать 5 символов. На выходе мы должны получить строку длиной не менее 16 символов. Программа должна занимать не более двух строк редактора кода.

```python
s = 'abc'
print(s * 6)
```

### Результат.
![image](https://github.com/user-attachments/assets/eafd2a75-3df1-47b5-8c90-521823b694ff)

### Выводы.
В данной работе применены знания из лабораторных работ, а именно применение умножения дублирования строки.

## Самостоятельная работа №5
### Создайте три переменные: день (тип данных - числовой), месяц (тип данных - строка), год (тип данных - числовой) и выведите в консоль текущую дату в формате: "Сегодня день месяц год. Всего хорошего!” используя F строку и оператор end внутри print(), в котором вы должны написать фразу "Всего хорошего!”. Программа должна занимать не более двух строк редактора кода.

```python
day, month, year = 15, 'October', 2023
print(f"Сегодня {day} {month} {year}.", end=" Всего хорошего!")
```
### Результат.
![image](https://github.com/user-attachments/assets/f255787b-6701-46ce-ac60-43423d03c820)

### Выводы.
